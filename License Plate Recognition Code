import cv2
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
import pytesseract
img=cv2.imread('C:/Users/yashb/Pictures/license plates/1.jpg')
img=cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
img=cv2.resize(img,(650,480))
plt.imshow(img)
img_gray=cv2.imread('C:/Users/yashb/Pictures/license plates/1.jpg',cv2.IMREAD_GRAYSCALE)
img_gray=cv2.resize(img_gray,(650,480))
plt.imshow(img_gray,cmap='gray')

med_val=np.median(img_gray)
med_val

gray_blur = cv2.bilateralFilter(img_gray,15,100,100)
lower=int(max(0,0.7*med_val))
upper=int(min(255,1.3*med_val))
edges=cv2.Canny(gray_blur,lower,upper+100)
plt.imshow(edges,cmap='gray')

contours,hierarchy =cv2.findContours(edges.copy(),cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
contours = sorted(contours,key=cv2.contourArea, reverse = True)[:30]
for contour in contours:
    peri = cv2.arcLength(contour, True)
    approx = cv2.approxPolyDP(contour, 0.01 * peri, True)
    if len(approx) == 4:
        contour_with_license_plate= approx
        x,y,w,h=cv2.boundingRect(approx)
        lp_detected=cv2.rectangle(img.copy(),(x,y),(x+w,y+h),(0,255,0),5)
        plt.imshow(lp_detected,cmap='gray')
        license_plate=img.copy()[y:y+h,x:x+w]
        break
        
print("\n")
plt.imshow(license_plate)
license_plate = cv2.bilateralFilter(license_plate.copy(),30,100,100)
plt.imshow(license_plate)
text=pytesseract.image_to_string(license_plate)
print(text)
